.TH GRICLI 1 "July 1, 2011" "Gricli user manual"
.SH NAME
.PP
gricli - grid commandline interface
.SH SYNOPSIS
.PP
gricli [\f[I]options\f[]]
.SH DESCRIPTION
.PP
Gricli is a shell that allows commandline interaction with the
grid.
You can use it to submit, control and monitor jobs.
It also supports easy access to grid-filesystems and resource
information.
.PP
Gricli is based on the \f[I]Grisu\f[] framework and can connect to
different \f[I]Grisu backends\f[] by selecting the appropriate one
as a commandline parameter, e.
g.:
.PP
\f[CR]
      gricli\ -b\ BeSTGRID
\f[]
.PP
or
.PP
\f[CR]
      \ gricli\ -b\ Local
\f[]
.PP
The above command would connect to the default \f[I]BeSTGRID\f[]
backend that publishes the \f[I]Grisu\f[] API via SOAP.
The latter would connect to a local \f[I]Grisu\f[] backend which
sits on the same computer as \f[I]gricli\f[], as long as the local
backend jar
(http://code.ceres.auckland.ac.nz/downloads/local-backend.jar) is
in the classpath (either in the same folder as gricli or in
%$HOME/.grisu.beta/lib/).
.SH OPTIONS
.TP
.B -b \f[I]BACKEND\f[], --backend=\f[I]BACKEND\f[]
the Grisu backend to connect to, default is \f[I]BeSTGRID\f[],
other possible backends are \f[I]BeSTGRID-TEST\f[],
\f[I]BeSTGRID-DEV\f[], \f[I]Local\f[].
.RS
.RE
.TP
.B -f \f[I]SCRIPT\f[], --file=\f[I]SCRIPT\f[]
Executes a gricli script
.RS
.RE
.TP
.B -n, --nologin
Disables login at gricli startup
.RS
.RE
.SH COMMANDS
.TP
.B \f[B]about\f[]
Prints out version information.
.RS
.RE
.TP
.B \f[B]add\f[]
Adds a value to list.
.RS
.RE
.TP
.B \f[B]add\ list\f[]
optional example text explains what kinds of lists are available
.RS
.RE
.TP
.B \f[B]add\ value\f[]
the value
.RS
.RE
.TP
.B \f[B]apropos\f[]
Lists command that are associated with a keyword
.RS
.RE
.TP
.B \f[B]apropos\ keyword\f[]
the keyword
.RS
.RE
.TP
.B \f[B]archive\ job\f[]
Archives a job to the default archive location (DataFabric).
The job will be deleted from the job database and the original
jobdirectory will be deleted if the archiving was successful.
.RS
.RE
.TP
.B \f[B]archive\ job\ jobname\f[]
the name of the job to archive
.RS
.RE
.TP
.B \f[B]attach\f[]
Sets attached file list.Supports multiple arguments and glob
regular expressions.
.RS
.RE
.TP
.B \f[B]attach\ files\f[]
the files to attach
.RS
.RE
.TP
.B \f[B]batch\ add\f[]
Add job to batch job container.
.RS
.RE
.TP
.B \f[B]batch\ add\ name\f[]
the name of the batch job
.RS
.RE
.TP
.B \f[B]batch\ add\ command\f[]
the (new) command to add
.RS
.RE
.TP
.B \f[B]batch\ create\f[]
Creates a new batch job object.
Batch job objects act as containers for jobs.
.RS
.RE
.TP
.B \f[B]batch\ create\ name\f[]
the name of the new batchjob.
Choose a meaningful name and make sure it is unique within your
jobnames if possible.
.RS
.RE
.TP
.B \f[B]batch\ submit\f[]
Submits a batch job (which should be created beforehand with
`batch create [name]' command.
.RS
.RE
.TP
.B \f[B]batch\ submit\ name\f[]
the name of the batchjob to submit
.RS
.RE
.TP
.B \f[B]clean\ job\f[]
Cleans a job from the database and deletes its job directory (also
kills it beforehand if it is still running).
.RS
.RE
.TP
.B \f[B]clean\ job\ jobname\f[]
the name of the job to clean
.RS
.RE
.TP
.B \f[B]clear\f[]
Clears a list.
.RS
.RE
.TP
.B \f[B]clear\ list\f[]
the list to clear (e.g.
global)
.RS
.RE
.TP
.B \f[B]cd\f[]
Change current directory.
Used to change location of job downloads and as relative directory
for attachments.
.RS
.RE
.TP
.B \f[B]cd\ dir\f[]
Directory to change to
.RS
.RE
.TP
.B \f[B]destroy\ proxy\f[]
Deletes the login information so you will have to enter it again on
your next login.
.RS
.RE
.TP
.B \f[B]downloadClean\ job\f[]
Downloads the whole jobdirectory.
If successful, it then cleans the job from the jobdatabase and
deletes the jobdirectory on the remote location.
.RS
.RE
.TP
.B \f[B]downloadClean\ job\ jobname\f[]
the name of the job to download and clean
.RS
.RE
.TP
.B \f[B]download\ job\f[]
Downloads the whole jobdirectory of the job.
.RS
.RE
.TP
.B \f[B]download\ job\ jobname\f[]
the name of the job to download
.RS
.RE
.TP
.B \f[B]get\f[]
experimental command
.RS
.RE
.TP
.B \f[B]filemanager\f[]
experimental command
.RS
.RE
.TP
.B \f[B]gls\f[]
Lists a directory in grid-space.
.RS
.RE
.TP
.B \f[B]gls\ path\f[]
the url to list.
Can be virtual (grid://\&...) or gridftp://\&...
.RS
.RE
.TP
.B \f[B]help\f[]
Prints this help message.
.RS
.RE
.TP
.B \f[B]help\ keywords\f[]
Optional keyword(s) to get more detailed information about a
specific command
.RS
.RE
.TP
.B \f[B]ilogin\f[]
Logs in to a grisu backend.
If there is no certificate proxy, interactively asks user for
details to create one.
.RS
.RE
.TP
.B \f[B]ilogin\ backend\f[]
the grisu backend to log in
.RS
.RE
.TP
.B \f[B]kill\ job\f[]
Kills a job.
This stops the remote execution of the job but leaves the job in
the job database and also the job directory intact.
To delete the job directory you need to clean the job.
.RS
.RE
.TP
.B \f[B]kill\ job\ jobname\f[]
the name of the job to kill
.RS
.RE
.TP
.B \f[B]login\f[]
Logs in to a grisu backend with existing certificate proxy.
Reports an error if there is no proxy.
.RS
.RE
.TP
.B \f[B]login\ backend\f[]
the grisu backend to log in
.RS
.RE
.TP
.B \f[B]print\ applications\f[]
List all application names available on the grid.
.RS
.RE
.TP
.B \f[B]print\ globals\f[]
Lists all global variables.
.RS
.RE
.TP
.B \f[B]print\ hosts\f[]
Lists all submission gateways.
.RS
.RE
.TP
.B \f[B]print\ jobs\f[]
Lists all currently active (running or finished but not cleaned or
archived) jobs.
.RS
.RE
.TP
.B \f[B]print\ queues\f[]
Lists all queues that are available to you.
.RS
.RE
.TP
.B \f[B]print\ groups\f[]
Lists all groups that are available to you.
.RS
.RE
.TP
.B \f[B]pwd\f[]
Prints current directory.
.RS
.RE
.TP
.B \f[B]quit\f[]
Logs out of this session but leaves your login information intact
so you don't need to enter those on your next login (if still valid
that is).
.RS
.RE
.TP
.B \f[B]run\f[]
Runs a gricli script.
.RS
.RE
.TP
.B \f[B]run\ script\f[]
path to the script file.
.RS
.RE
.TP
.B \f[B]set\f[]
Sets a value for a variable.
.RS
.RE
.TP
.B \f[B]set\ var\f[]
the name of the variable
.RS
.RE
.TP
.B \f[B]set\ value\f[]
the value
.RS
.RE
.TP
.B \f[B]submit\f[]
Submits a new job using the currently set environment and the
specified commandline.
.RS
.RE
.TP
.B \f[B]submit\ commandline\f[]
the commandline
.RS
.RE
.TP
.B \f[B]user\ clearCache\f[]
Clears the Grisu filesystem cache.
You need to logout and login again to see the effects of this
command.
Be aware that the next login will take longer than usual because
the filesystem cache is rebuilt at that stage.
.RS
.RE
.TP
.B \f[B]wait\ job\f[]
Waits for a job to finish on the remote compute resource.
Useful for use within scripts where you want to automatically
submit and download/archive jobs.
At the moment allows to wait for single job only.
.RS
.RE
.TP
.B \f[B]wait\ job\ jobname\f[]
the name of the job on which to wait.
Regular expressions are not supported.
.RS
.RE
.PP
The Gricli source code and all documentation may be downloaded from
<http://github.com/grisu/gricli>.
.SH AUTHORS
Yuriy Halytskyy, Markus Binsteiner.

